#version 450
layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

#include "Binding.h"

layout(binding = VOXEL_RADIANCE_MIPMAP_TEXTURE) uniform sampler3D uSourceVoxelRadianceMipmaps[6];
layout(rgba16f, binding = VOXEL_RADIANCE_MIPMAP_IMAGE) uniform writeonly image3D uVoxelRadianceMipmaps[6];

const ivec3 kOffsets[8] = {
    {0, 0, 0}, {0, 0, 1}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1},
};
const int kSides[6][4] = {{0, 1, 2, 3}, {4, 5, 6, 7}, {0, 1, 4, 5}, {2, 3, 6, 7}, {0, 2, 4, 6}, {1, 3, 5, 7}};

void main() {
	ivec3 target_size = imageSize(uVoxelRadianceMipmaps[0]);
	ivec3 target_pos = ivec3(gl_GlobalInvocationID);
	if (any(greaterThanEqual(target_pos, ivec3(target_size.xy, target_size.z * 6))))
		return;
	int f = target_pos.z / target_size.x;
	target_pos.z %= target_size.x;

	ivec3 source_base = target_pos << 1;
	int source_lod = findLSB(textureSize(uSourceVoxelRadianceMipmaps[0], 0).x / target_size.x) - 1;

	vec4 arr[8] = {
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[0], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[1], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[2], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[3], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[4], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[5], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[6], source_lod),
	    texelFetch(uSourceVoxelRadianceMipmaps[f], source_base + kOffsets[7], source_lod),
	};

	int o = f ^ 1;
	vec4 sum = (arr[kSides[f][0]] + arr[kSides[o][0]] * (1.0 - arr[kSides[f][0]].a)) +
	           (arr[kSides[f][1]] + arr[kSides[o][1]] * (1.0 - arr[kSides[f][1]].a)) +
	           (arr[kSides[f][2]] + arr[kSides[o][2]] * (1.0 - arr[kSides[f][2]].a)) +
	           (arr[kSides[f][3]] + arr[kSides[o][3]] * (1.0 - arr[kSides[f][3]].a));
	sum *= .25;
	imageStore(uVoxelRadianceMipmaps[f], target_pos, sum);
}
